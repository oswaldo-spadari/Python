import yfinance as yf
import pandas as pd

# Defina o símbolo da ação que deseja analisar e o período histórico
symbol = 'AAPL'  # Exemplo: Apple Inc.
start_date = '2020-01-01'
end_date = '2021-12-31'

# Crie um objeto Ticker usando o símbolo
ticker = yf.Ticker(symbol)

# Obtenha os preços históricos para o período especificado
historical_data = ticker.history(period="1d", start=start_date, end=end_date)

# Calcule as médias móveis
short_window = 50
long_window = 200

historical_data['SMA50'] = historical_data['Close'].rolling(window=short_window).mean()
historical_data['SMA200'] = historical_data['Close'].rolling(window=long_window).mean()

# Inicialize variáveis para rastrear os resultados do backtest
capital_inicial = 100000  # Exemplo: $100.000
capital = capital_inicial
posicao_aberta = False
acoes_em_posicao = 0
comissao = 0.001  # Exemplo de taxa de comissão

# Execute o backtest
for i in range(len(historical_data)):
    last_price = historical_data['Close'].iloc[i]
    sma_50 = historical_data['SMA50'].iloc[i]
    sma_200 = historical_data['SMA200'].iloc[i]

    if sma_50 > sma_200 and not posicao_aberta:
        # Abra uma posição longa (comprar)
        acoes_em_posicao = capital // last_price
        capital -= acoes_em_posicao * last_price
        posicao_aberta = True

    elif sma_50 < sma_200 and posicao_aberta:
        # Feche a posição longa (vender)
        capital += acoes_em_posicao * last_price
        capital -= capital * comissao  # Deduzir comissão
        posicao_aberta = False
        acoes_em_posicao = 0

# Calcule o retorno final do backtest
retorno_final = (capital + acoes_em_posicao * last_price - capital_inicial) / capital_inicial * 100

print(f"Retorno final do backtest: {retorno_final:.2f}%")
